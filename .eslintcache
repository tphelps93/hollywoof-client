[{"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\index.js":"1","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\App.js":"2","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\reportWebVitals.js":"3","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\contexts\\DataContext.js":"4","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Header\\Header.js":"5","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Details\\Details.js":"6","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Login\\Login.js":"7","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\ReportForm\\ReportForm.js":"8","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\LandingPage\\LandingPage.js":"9","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Registration\\Registration.js":"10","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Main\\Main.js":"11","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\omdb-service.js":"12","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\config.js":"13","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\api-service.js":"14","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\token-service.js":"15","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\auth-api-service.js":"16","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\TSForm\\TSForm.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":3929,"mtime":1610033401674,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":516,"mtime":1610033183798,"results":"22","hashOfConfig":"19"},{"size":1324,"mtime":1609772816590,"results":"23","hashOfConfig":"19"},{"size":5609,"mtime":1610117560382,"results":"24","hashOfConfig":"19"},{"size":1804,"mtime":1609772514398,"results":"25","hashOfConfig":"19"},{"size":922,"mtime":1609361363722,"results":"26","hashOfConfig":"19"},{"size":1528,"mtime":1609337901111,"results":"27","hashOfConfig":"19"},{"size":2163,"mtime":1609704495563,"results":"28","hashOfConfig":"19"},{"size":5119,"mtime":1610033768174,"results":"29","hashOfConfig":"19"},{"size":558,"mtime":1609876491328,"results":"30","hashOfConfig":"19"},{"size":236,"mtime":1609703790148,"results":"31","hashOfConfig":"19"},{"size":2227,"mtime":1609976835483,"results":"32","hashOfConfig":"19"},{"size":734,"mtime":1609771854952,"results":"33","hashOfConfig":"19"},{"size":424,"mtime":1609768311551,"results":"34","hashOfConfig":"19"},{"size":2812,"mtime":1609940682449,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"vzh12l",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\index.js",[],["75","76"],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\App.js",["77","78"],"// Dependency Imports\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// Context Imports\nimport DataContext from './contexts/DataContext';\n// API Service Imports\nimport { fetchTimestamps, fetchBarks } from './services/api-service';\n\n// Component Imports\nimport Header from './Components/Header/Header';\nimport LandingPage from './Components/LandingPage/LandingPage';\nimport Registration from './Components/Registration/Registration';\nimport Login from './Components/Login/Login';\nimport Main from './Components/Main/Main';\nimport Details from './Components/Details/Details';\nimport TSForm from './Components/TSForm/TSForm';\n// CSS Imports\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    search: '',\n    movies: [],\n    shows: [],\n    barks: [],\n    timestamps: [],\n    totalResults: 0,\n    authToken: null,\n    error: null,\n  };\n\n  componentDidMount() {\n    let promises = [fetchTimestamps(), fetchBarks()];\n    Promise.all(promises)\n      .then(values => {\n        this.setState({\n          timestamps: values[0],\n          barks: values[1],\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error,\n        });\n      });\n  }\n\n  /* Add To State */\n\n  // Add To 'movies' Array\n  addMovies = newMovies => {\n    this.setState({\n      movies: [...this.state.movies, newMovies],\n    });\n  };\n\n  // Add To 'shows' Array\n  addShows = newShows => {\n    this.setState({\n      shows: [...this.state.shows, newShows],\n    });\n  };\n\n  // Add To 'timestamps' Array\n  addTimestamps = newTimestamp => {\n    this.setState({\n      timestamps: [...this.state.timestamps, newTimestamp],\n    });\n  };\n\n  /* Update State */\n\n  iterateConfirmations = id => {\n    this.setState({\n      timestamps: this.state.timestamps.map(timestamp => {\n        return timestamp.ts_id === id\n          ? { ...timestamp, confirmations: timestamp.confirmations + 1 }\n          : timestamp;\n      }),\n    });\n  };\n\n  updateMovieTotalResults = totalResults => {\n    this.setState({\n      totalResults: this.state.movies, totalResults,\n    });\n  };\n\n  updateShowsTotalResults = totalResults => {\n    this.setState({\n      totalResults: this.state.shows.totalResults = totalResults,\n    });\n  };\n\n  /* Reset State */\n\n  resetList = () => {\n    this.setState({\n      movies: [],\n      shows: [],\n    });\n  };\n\n  /* Auth Token Functions */\n\n  setAuthToken = authToken => {\n    this.setState({\n      authToken: authToken,\n    });\n  };\n\n  clearAuthToken = () => {\n    this.setState({\n      authToken: null,\n    });\n  };\n\n  render() {\n    const value = {\n      search: this.state.search,\n      movies: this.state.movies,\n      shows: this.state.shows,\n      timestamps: this.state.timestamps,\n      totalResults: this.state.totalResults,\n      barks: this.state.barks,\n      authToken: this.state.authToken,\n      addMovies: this.addMovies,\n      addShows: this.addShows,\n      addTimestamps: this.addTimestamps,\n      iterateConfirmations: this.iterateConfirmations,\n      updateMovieTotalResults: this.updateMovieTotalResults,\n      updateShowsTotalResults: this.updateShowsTotalResults,\n      resetList: this.resetList,\n      setAuthToken: this.setAuthToken,\n      clearAuthToken: this.clearAuthToken,\n    };\n    return (\n      <Router>\n        <div className='App'>\n          <div className='glass-layer'>\n            <DataContext.Provider value={value}>\n              <Header />\n              <Route exact path='/' component={LandingPage} />\n              <Route path='/main' component={Main} />\n              <Route path='/register' component={Registration} />\n              <Route path='/login' component={Login} />\n              <Route path='/details/:imdbID' component={Details} />\n              <Route path='/tsform/:imdbID' component={TSForm} />\n            </DataContext.Provider>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\reportWebVitals.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\contexts\\DataContext.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Details\\Details.js",["79","80","81","82"],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Login\\Login.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\ReportForm\\ReportForm.js",[],["83","84"],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\LandingPage\\LandingPage.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Registration\\Registration.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Main\\Main.js",["85"],"// Dependency Imports\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// Context Imports\r\nimport DataContext from '../../contexts/DataContext';\r\n// API Service Imports\r\nimport { fetchMovies, fetchShows } from '../../services/omdb-service';\r\nimport TokenService from '../../services/token-service';\r\n// CSS Imports\r\nimport './Main.css';\r\n\r\n/* TODO \r\n  Break into smaller components\r\n   1. Filter\r\n   2. Table\r\n    */\r\n\r\nexport default class Main extends Component {\r\n  state = {\r\n    title: '',\r\n    filter: '',\r\n    page: 1,\r\n    totalResults: 0,\r\n    isSubmitting: false,\r\n  };\r\n  static contextType = DataContext;\r\n\r\n  handleChange = event => {\r\n    const isCheckbox = event.target.type === 'checkbox';\r\n    this.setState({\r\n      [event.target.name]: isCheckbox\r\n        ? event.target.checked\r\n        : event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSearch = e => {\r\n    e.preventDefault();\r\n    const { page } = e.target;\r\n    const { title } = e.target;\r\n    const { filter } = e.target;\r\n    this.context.resetList();\r\n    if (filter.value.toLowerCase() === 'movies') {\r\n      fetchMovies(title.value, page.value)\r\n        .then(movies => {\r\n          this.context.addMovies(movies.Search);\r\n          this.context.updateMovieTotalResults(movies.totalResults)\r\n          // this.setState({\r\n          //   totalResults: movies.totalResults,\r\n          // });\r\n        })\r\n        .then(() => {\r\n          this.setState({\r\n            isSubmitting: true,\r\n          });\r\n        });\r\n    }\r\n\r\n    if (filter.value.toLowerCase() === 'tv shows') {\r\n      fetchShows(title.value, page.value)\r\n        .then(shows => {\r\n          this.context.addShows(shows.Search);\r\n          this.setState({\r\n            totalResults: shows.totalResults,\r\n          });\r\n        })\r\n        .then(() => {\r\n          this.setState({\r\n            isSubmitting: true,\r\n          });\r\n        });\r\n    }\r\n  };\r\n  render() {\r\n    const movies = this.context.movies[0];\r\n    const shows = this.context.shows[0];\r\n    const barks = this.context.barks;\r\n\r\n    let renderList;\r\n    if (movies) {\r\n      renderList = movies.map(movie => {\r\n        return (\r\n          <tbody key={movie.imdbID} className='main-table'>\r\n            <tr>\r\n              <th>\r\n                <Link\r\n                  style={{ textDecoration: 'none', color: 'black' }}\r\n                  to={`/details/${movie.imdbID}`}\r\n                >\r\n                  {movie.Title}\r\n                </Link>\r\n              </th>\r\n\r\n              <th> {movie.Year} </th>\r\n              <th> Yes</th>\r\n\r\n              {TokenService.getAuthToken() ? (\r\n                <th>\r\n                  <Link to={`/tsform/${movie.imdbID}`}>\r\n                    <button> Report </button>\r\n                  </Link>\r\n                </th>\r\n              ) : null}\r\n            </tr>\r\n          </tbody>\r\n        );\r\n      });\r\n    }\r\n  \r\n    if (shows) {\r\n      renderList = shows.map(show => {\r\n        return (\r\n          <tbody key={show.imdbID} className='main-table'>\r\n            <tr>\r\n              <th>\r\n                <Link\r\n                  style={{ textDecoration: 'none', color: 'black' }}\r\n                  to={`/details/${show.imdbID}`}\r\n                >\r\n                  {show.Title}\r\n                </Link>\r\n              </th>\r\n\r\n              <th> {show.Year} </th>\r\n              <th> Yes </th>\r\n              {TokenService.getAuthToken() ? (\r\n                <th>\r\n                  <Link to={`/tsform/${show.imdbID}`}>\r\n                    <button> Report </button>\r\n                  </Link>\r\n                </th>\r\n              ) : null}\r\n            </tr>\r\n          </tbody>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className='main'>\r\n        <form onSubmit={e => this.handleSearch(e)} className='search'>\r\n          <select\r\n            onChange={this.handleChange}\r\n            name='filter'\r\n            value={this.state.filter}\r\n          >\r\n            <option> movies </option>\r\n            <option> tv shows </option>\r\n          </select>\r\n          <input\r\n            onChange={this.handleChange}\r\n            type='text'\r\n            name='title'\r\n            placeholder='title'\r\n            value={this.state.title}\r\n          ></input>\r\n          <input\r\n            onChange={this.handleChange}\r\n            type='number'\r\n            name='page'\r\n            min='1'\r\n            max='10'\r\n            placeholder='page'\r\n            value={this.state.page}\r\n          ></input>\r\n          <button type='submit'> Submit </button>\r\n        </form>\r\n        <table width='90%' id='table' className='main-table'>\r\n          <caption>Search Results</caption>\r\n            <caption> Results: 10 of {this.context.totalResults}</caption>\r\n          <thead>\r\n            <tr>\r\n              <th> Title </th>\r\n              <th> Release Date </th>\r\n              <th> Barks </th>\r\n              {TokenService.getAuthToken() ? <th> Report </th> : null}\r\n            </tr>\r\n          </thead>\r\n          {renderList}\r\n          <tfoot></tfoot>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\omdb-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\config.js",["86"],"export default {\r\n  OMDB_API_URL:\r\n    process.env.OMDB_API_URL || 'http://www.omdbapi.com/?apikey=bd085d9a&s=',\r\n  API_BASE_URL: process.env.REACT_APP_BASE_URL || 'http://localhost:8000/api',\r\n  TOKEN_KEY: 'hw-client-auth-token',\r\n};\r\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\api-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\token-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\auth-api-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\TSForm\\TSForm.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":85,"column":40,"nodeType":"93","messageId":"94","endLine":85,"endColumn":52},{"ruleId":"95","severity":1,"message":"96","line":91,"column":21,"nodeType":"97","endLine":91,"endColumn":37},{"ruleId":"98","severity":1,"message":"99","line":24,"column":25,"nodeType":"100","messageId":"101","endLine":24,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":62,"column":30,"nodeType":"104","messageId":"94","endLine":62,"endColumn":32},{"ruleId":"102","severity":1,"message":"103","line":105,"column":31,"nodeType":"104","messageId":"94","endLine":105,"endColumn":33},{"ruleId":"102","severity":1,"message":"103","line":133,"column":30,"nodeType":"104","messageId":"94","endLine":133,"endColumn":32},{"ruleId":"87","replacedBy":"105"},{"ruleId":"89","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":77,"column":11,"nodeType":"109","messageId":"110","endLine":77,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":1,"column":1,"nodeType":"113","endLine":6,"endColumn":3},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-dupe-keys","Duplicate key 'totalResults'.","ObjectExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["114"],["115"],"no-unused-vars","'barks' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]