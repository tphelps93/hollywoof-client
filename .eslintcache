[{"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\index.js":"1","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\App.js":"2","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\reportWebVitals.js":"3","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Header\\Header.js":"4","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Details\\Details.js":"5","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Login\\Login.js":"6","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\LandingPage\\LandingPage.js":"7","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Registration\\Registration.js":"8","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Main\\Main.js":"9","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\api-service.js":"10","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\contexts\\DataContext.js":"11","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\TSForm\\TSForm.js":"12","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\token-service.js":"13","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\config.js":"14","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\auth-api-service.js":"15","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\omdb-service.js":"16","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\FontAwesomeIcons\\store.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":5084,"mtime":1610484925287,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1324,"mtime":1610475500903,"results":"22","hashOfConfig":"19"},{"size":8949,"mtime":1610487249597,"results":"23","hashOfConfig":"19"},{"size":2053,"mtime":1610475500905,"results":"24","hashOfConfig":"19"},{"size":1669,"mtime":1610486218992,"results":"25","hashOfConfig":"19"},{"size":2387,"mtime":1610475500907,"results":"26","hashOfConfig":"19"},{"size":5484,"mtime":1610497025449,"results":"27","hashOfConfig":"19"},{"size":4497,"mtime":1610478778479,"results":"28","hashOfConfig":"19"},{"size":618,"mtime":1610475500909,"results":"29","hashOfConfig":"19"},{"size":3253,"mtime":1610483855744,"results":"30","hashOfConfig":"19"},{"size":734,"mtime":1610475500912,"results":"31","hashOfConfig":"19"},{"size":236,"mtime":1610475500909,"results":"32","hashOfConfig":"19"},{"size":424,"mtime":1610475500911,"results":"33","hashOfConfig":"19"},{"size":558,"mtime":1610475500911,"results":"34","hashOfConfig":"19"},{"size":208,"mtime":1610484714592,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"vzh12l",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\index.js",[],["77","78"],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\App.js",["79","80"],"// Dependency Imports\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n// Context Imports\r\nimport DataContext from './contexts/DataContext';\r\n// API Service Imports\r\nimport { fetchTimestamps, fetchBarks } from './services/api-service';\r\n\r\n// Component Imports\r\nimport Header from './Components/Header/Header';\r\nimport LandingPage from './Components/LandingPage/LandingPage';\r\nimport Registration from './Components/Registration/Registration';\r\nimport Login from './Components/Login/Login';\r\nimport Main from './Components/Main/Main';\r\nimport Details from './Components/Details/Details';\r\nimport TSForm from './Components/TSForm/TSForm';\r\n// CSS Imports\r\nimport '../src/Components/FontAwesomeIcons/store';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    search: '',\r\n    movies: [],\r\n    shows: [],\r\n    barks: [],\r\n    timestamps: [],\r\n    totalResults: 0,\r\n    authToken: null,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let promises = [fetchTimestamps(), fetchBarks()];\r\n    Promise.all(promises)\r\n      .then(values => {\r\n        this.setState({\r\n          timestamps: values[0],\r\n          barks: values[1],\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          error,\r\n        });\r\n      });\r\n  }\r\n\r\n  /* Add To State */\r\n\r\n  // Add To 'movies' Array\r\n  addMovies = newMovies => {\r\n    this.setState({\r\n      movies: [...this.state.movies, newMovies],\r\n    });\r\n  };\r\n\r\n  // Add To 'shows' Array\r\n  addShows = newShows => {\r\n    this.setState({\r\n      shows: [...this.state.shows, newShows],\r\n    });\r\n  };\r\n\r\n  // Add To 'timestamps' Array\r\n  addTimestamps = newTimestamp => {\r\n    this.setState({\r\n      timestamps: [...this.state.timestamps, newTimestamp],\r\n    });\r\n  };\r\n\r\n  addBark = newBark => {\r\n    this.setState({\r\n      barks: [...this.state.barks, newBark],\r\n    });\r\n  };\r\n\r\n  /* Update State */\r\n\r\n  iterateConfirmations = id => {\r\n    this.setState({\r\n      timestamps: this.state.timestamps.map(timestamp => {\r\n        return timestamp.ts_id === id\r\n          ? { ...timestamp, confirmations: timestamp.confirmations + 1 }\r\n          : timestamp;\r\n      }),\r\n    });\r\n  };\r\n\r\n  iterateLikes = id => {\r\n    this.setState({\r\n      timestamps: this.state.timestamps.map(timestamp => {\r\n        return timestamp.ts_id === id\r\n          ? { ...timestamp, likes: timestamp.likes + 1 }\r\n          : timestamp;\r\n      }),\r\n    });\r\n  };\r\n\r\n  iterateDislikes = id => {\r\n    this.setState({\r\n      timestamps: this.state.timestamps.map(timestamp => {\r\n        return timestamp.ts_id === id\r\n          ? { ...timestamp, dislikes: timestamp.dislikes + 1 }\r\n          : timestamp;\r\n      }),\r\n    });\r\n  };\r\n\r\n  updateMovieTotalResults = totalResults => {\r\n    this.setState({\r\n      totalResults: this.state.movies,\r\n      totalResults,\r\n    });\r\n  };\r\n\r\n  updateShowsTotalResults = totalResults => {\r\n    this.setState({\r\n      totalResults: (this.state.shows.totalResults = totalResults),\r\n    });\r\n  };\r\n\r\n  /* Delete State */\r\n  deleteTS = ts_id => {\r\n    this.setState({\r\n      timestamps: this.state.timestamps.filter(ts => ts.ts_id !== ts_id),\r\n    });\r\n  };\r\n\r\n  /* Reset State */\r\n\r\n  resetList = () => {\r\n    this.setState({\r\n      movies: [],\r\n      shows: [],\r\n    });\r\n  };\r\n\r\n  /* Auth Token Functions */\r\n\r\n  setAuthToken = authToken => {\r\n    this.setState({\r\n      authToken: authToken,\r\n    });\r\n  };\r\n\r\n  clearAuthToken = () => {\r\n    this.setState({\r\n      authToken: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const value = {\r\n      search: this.state.search,\r\n      movies: this.state.movies,\r\n      shows: this.state.shows,\r\n      timestamps: this.state.timestamps,\r\n      totalResults: this.state.totalResults,\r\n      barks: this.state.barks,\r\n      authToken: this.state.authToken,\r\n      addMovies: this.addMovies,\r\n      addShows: this.addShows,\r\n      addTimestamps: this.addTimestamps,\r\n      addBark: this.addBark,\r\n      iterateConfirmations: this.iterateConfirmations,\r\n      iterateLikes: this.iterateLikes,\r\n      iterateDislikes: this.iterateDislikes,\r\n      updateMovieTotalResults: this.updateMovieTotalResults,\r\n      updateShowsTotalResults: this.updateShowsTotalResults,\r\n      deleteTS: this.deleteTS,\r\n      resetList: this.resetList,\r\n      setAuthToken: this.setAuthToken,\r\n      clearAuthToken: this.clearAuthToken,\r\n    };\r\n    return (\r\n      <Router>\r\n        <div className='App'>\r\n          <div className='glass-layer'>\r\n            <DataContext.Provider value={value}>\r\n              <Header />\r\n              <Route exact path='/' component={LandingPage} />\r\n              <Route path='/main' component={Main} />\r\n              <Route path='/register' component={Registration} />\r\n              <Route path='/login' component={Login} />\r\n              <Route path='/details/:imdbID' component={Details} />\r\n              <Route path='/tsform/:imdbID' component={TSForm} />\r\n            </DataContext.Provider>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\reportWebVitals.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Details\\Details.js",["81","82","83","84"],"// Dependency Imports\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// Context Imports\r\nimport DataContext from '../../contexts/DataContext';\r\n// API Service Imports\r\nimport {\r\n  updateConfirmationCount,\r\n  updateLikeCount,\r\n  updateDislikeCount,\r\n  postBarks,\r\n  deleteTimestamp,\r\n} from '../../services/api-service';\r\nimport TokenService from '../../services/token-service';\r\n// CSS Imports\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Details.css';\r\n\r\nexport default class Details extends Component {\r\n  state = { error: null, expanded: [], username: '' };\r\n  static contextType = DataContext;\r\n\r\n  async toggleComment(ts_id) {\r\n    let expanded = [...this.state.expanded];\r\n    if (this.state.expanded.includes(ts_id)) {\r\n      expanded = expanded.filter(exp => {\r\n        return exp !== ts_id;\r\n      });\r\n    } else {\r\n      expanded.push(ts_id);\r\n    }\r\n    this.setState({\r\n      expanded,\r\n    });\r\n  }\r\n\r\n  tsExpanded = ts => {\r\n    return (\r\n      <tr key={ts.ts_id} name='comment' className='comm-container'>\r\n        <th>\r\n          <p>Username</p>\r\n          <h2>{ts.user_name}</h2>\r\n        </th>\r\n        <th>\r\n          <p>Comment</p>\r\n          <h3>{ts.comment}</h3>\r\n        </th>\r\n        <th>\r\n          {TokenService.getAuthToken() ? (\r\n            <button onClick={() => this.handleLikeClick(ts.ts_id, ts.likes)}>\r\n              <FontAwesomeIcon icon='thumbs-up' />\r\n              <span name='likes'>{ts.likes}</span>\r\n            </button>\r\n          ) : (\r\n            <span>\r\n              <FontAwesomeIcon icon='thumbs-up' />\r\n              <span name='likes'>{ts.likes}</span>\r\n            </span>\r\n          )}\r\n          {TokenService.getAuthToken() ? (\r\n            <button\r\n              onClick={() => this.handleDislikeClick(ts.ts_id, ts.dislikes)}\r\n            >\r\n              <FontAwesomeIcon icon='thumbs-down' />\r\n              <span name='dislikes'> {ts.dislikes} </span>\r\n            </button>\r\n          ) : (\r\n            <span>\r\n              <FontAwesomeIcon icon='thumbs-down' />{' '}\r\n              <span name='dislikes'> {ts.dislikes} </span>\r\n            </span>\r\n          )}\r\n        </th>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  renderElement = () => {\r\n    const barks = this.context.barks;\r\n    let element = <p> Dog Barks: Not Reported </p>;\r\n    for (let i = 0; i < barks.length; i++) {\r\n      if (barks[i].media_id === this.props.match.params.imdbID) {\r\n        element = (\r\n          <div className='bark-stat'>\r\n            <p>\r\n              Dog Barks: <span id='barks'>{barks[i].barks}</span>\r\n            </p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return element;\r\n  };\r\n\r\n  handleClickDeleteTS = ts_id => {\r\n    deleteTimestamp(ts_id).then(ts => {\r\n      this.context.deleteTS(ts_id);\r\n    });\r\n  };\r\n\r\n  handlePostBarkStatus = e => {\r\n    const user_id = TokenService.jwtDecode(TokenService.getAuthToken()).payload\r\n      .user_id;\r\n    e.preventDefault();\r\n    const { status } = e.target;\r\n    const mediaId = this.props.match.params.imdbID;\r\n    postBarks(status.value, mediaId, user_id).then(updatedStatus => {\r\n      this.context.addBark(updatedStatus);\r\n    });\r\n  };\r\n\r\n  handleLikeClick = (ts_id, likes) => {\r\n    const userid = TokenService.jwtDecode(TokenService.getAuthToken()).payload\r\n      .user_id;\r\n    updateLikeCount(ts_id, likes, userid);\r\n    this.context.iterateLikes(ts_id);\r\n  };\r\n\r\n  handleDislikeClick = (ts_id, dislikes) => {\r\n    const userid = TokenService.jwtDecode(TokenService.getAuthToken()).payload\r\n      .user_id;\r\n    updateDislikeCount(ts_id, dislikes, userid);\r\n    this.context.iterateDislikes(ts_id);\r\n  };\r\n\r\n  handleConfirmationClick = (ts_id, confirmations) => {\r\n    const userid = TokenService.jwtDecode(TokenService.getAuthToken()).payload\r\n      .user_id;\r\n    updateConfirmationCount(ts_id, confirmations, userid);\r\n    this.context.iterateConfirmations(ts_id);\r\n  };\r\n\r\n  render() {\r\n    const timestamps = this.context.timestamps;\r\n    const movies = this.context.movies[0];\r\n    const shows = this.context.shows[0];\r\n\r\n    let renderTimestamps;\r\n    if (timestamps) {\r\n      renderTimestamps = timestamps\r\n        .filter(ts => {\r\n          return ts.media_id == this.props.match.params.imdbID;\r\n        })\r\n        .map(ts => {\r\n          return (\r\n            <tbody key={ts.ts_id}>\r\n              <tr className='container'>\r\n                <th onClick={() => this.toggleComment(ts.ts_id)}>\r\n                  {' '}\r\n                  {ts.timestamp}{' '}\r\n                </th>\r\n                <th> {ts.volume} </th>\r\n                <th className='conf-hov'>\r\n                  {TokenService.getAuthToken() ? (\r\n                    <button\r\n                      onClick={() =>\r\n                        this.handleConfirmationClick(ts.ts_id, ts.confirmations)\r\n                      }\r\n                    >\r\n                      <FontAwesomeIcon icon='paw' />\r\n                      <span>{ts.confirmations}</span>\r\n                    </button>\r\n                  ) : <span>{ts.confirmations}</span>}\r\n\r\n                  {TokenService.getAuthToken() && ts.userid ==\r\n                  TokenService.jwtDecode(TokenService.getAuthToken()).payload\r\n                    .user_id ? (\r\n                    <button\r\n                      onClick={() => this.handleClickDeleteTS(ts.ts_id)}\r\n                      className='delete-ts'\r\n                    >\r\n                      {' '}\r\n                      Delete{' '}\r\n                    </button>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </th>\r\n              </tr>\r\n              {this.state.expanded.includes(ts.ts_id)\r\n                ? this.tsExpanded(ts)\r\n                : ''}\r\n            </tbody>\r\n          );\r\n        });\r\n    }\r\n\r\n    let renderDetails;\r\n    if (movies) {\r\n      renderDetails = movies\r\n        .filter(movie => {\r\n          return movie.imdbID == this.props.match.params.imdbID;\r\n        })\r\n        .map(movie => {\r\n          return (\r\n            <div key={movie.imdbID} className='movie-info'>\r\n              {/* If movie poster is null return a placeholder image */}\r\n              {movie.Poster === 'N/A' ? (\r\n                <img\r\n                  src='https://www.gaithersburgdental.com/wp-content/uploads/2016/10/orionthemes-placeholder-image.png'\r\n                  alt='movie poster'\r\n                ></img>\r\n              ) : (\r\n                <img src={`${movie.Poster}`} alt='movie poster'></img>\r\n              )}\r\n              <h3> {movie.Title} </h3>\r\n              <p> Release Date: {movie.Year} </p>\r\n              {this.renderElement()}\r\n              {TokenService.getAuthToken() ? (\r\n                <form onSubmit={e => this.handlePostBarkStatus(e)}>\r\n                  <select className='status' name='status'>\r\n                    <option> Yes </option>\r\n                    <option> No </option>\r\n                  </select>{' '}\r\n                  <button type='submit'>Update</button>\r\n                </form>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          );\r\n        });\r\n    }\r\n\r\n    if (shows) {\r\n      renderDetails = shows\r\n        .filter(show => {\r\n          return show.imdbID == this.props.match.params.imdbID;\r\n        })\r\n        .map(show => {\r\n          return (\r\n            <div key={show.imdbID} className='movie-info'>\r\n              <img\r\n                src={`${\r\n                  !show.Poster\r\n                    ? 'https://www.gaithersburgdental.com/wp-content/uploads/2016/10/orionthemes-placeholder-image.png'\r\n                    : show.Poster\r\n                }`}\r\n                alt='movie poster'\r\n              ></img>\r\n              <h3> {show.Title} </h3>\r\n              <p> Release Date: {show.Year} </p>\r\n              {this.renderElement()}\r\n              {TokenService.getAuthToken() ? (\r\n                <form onSubmit={e => this.handlePostBarkStatus(e)}>\r\n                  <select className='status' name='status'>\r\n                    <option> Yes </option>\r\n                    <option> No </option>\r\n                  </select>{' '}\r\n                  <button type='submit'>Update</button>\r\n                </form>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          );\r\n        });\r\n    }\r\n    return (\r\n      <div className='details-page'>\r\n        <div className='details'>{renderDetails}</div>\r\n\r\n        <table width='90%' id='table' className='detail-table'>\r\n          <caption>Time Stamps</caption>\r\n          <thead>\r\n            <tr>\r\n              <th> Timestamp </th>\r\n              <th> Volume </th>\r\n              <th> Confirmed </th>\r\n            </tr>\r\n          </thead>\r\n          {renderTimestamps}\r\n        </table>\r\n        <Link to='/main'>\r\n          <button className='home-back'> Back </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Login\\Login.js",["85"],"// Dependency Imports\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// API Service Imports\r\nimport TokenService from '../../services/token-service';\r\nimport AuthApiService from '../../services/auth-api-service';\r\nimport DataContext from '../../contexts/DataContext';\r\n// CSS Imports\r\nimport './Login.css';\r\n\r\nexport default class Login extends Component {\r\n  state = { error: null };\r\n  static contextType = DataContext;\r\n\r\n  handleSubmitJwtAuth = e => {\r\n    e.preventDefault();\r\n    this.setState({ error: null });\r\n    const { user_name, password } = e.target;\r\n\r\n    AuthApiService.postLogin({\r\n      user_name: user_name.value,\r\n      password: password.value,\r\n    })\r\n      .then(res => {\r\n        user_name.value = '';\r\n        password.value = '';\r\n        TokenService.saveAuthToken(res.authToken);\r\n        this.context.setAuthToken(res.authToken);\r\n      })\r\n      .then(() => {\r\n        this.props.history.push('/main');\r\n      })\r\n      .catch(res => {\r\n        this.setState({ error: 'Incorrect username or password.' });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='login'>\r\n        <div className='login-content'>\r\n          <h1> Login to Hollywoof </h1>\r\n          <h3>...continue informing others to save someone's evening.</h3>\r\n        </div>\r\n        <div className='login-form'>\r\n          <form onSubmit={this.handleSubmitJwtAuth}>\r\n              <input\r\n                type='text'\r\n                name='user_name'\r\n                placeholder='username'\r\n              ></input>\r\n              <input\r\n                type='password'\r\n                name='password'\r\n                placeholder='password'\r\n              ></input>\r\n            <button type='submit'> Submit </button>\r\n            <p> Don't have an account? <Link style={{textDecoration:'none'}} to='/register'><a> Register Here </a> </Link></p>\r\n\r\n            <div style={{ color: 'red', fontSize: 10 }}>{this.state.error}</div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\LandingPage\\LandingPage.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Registration\\Registration.js",["86"],"// Dependency Imports\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n// API Imports\r\nimport { postUser } from '../../services/api-service';\r\n// CSS Imports\r\nimport './Registration.css';\r\n\r\nexport default class Registration extends Component {\r\n  handleChange = event => {\r\n    const isCheckbox = event.target.type === 'checkbox';\r\n    this.setState({\r\n      [event.target.name]: isCheckbox\r\n        ? event.target.checked\r\n        : event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name } = e.target;\r\n    const { user_name } = e.target;\r\n    const { password } = e.target;\r\n    postUser(name.value, user_name.value, password.value)\r\n      .then(() => {\r\n        name.value = '';\r\n        user_name.value = '';\r\n        password.value = '';\r\n      })\r\n      .then(() => {\r\n        this.props.history.push('/main');\r\n      })\r\n      .catch(this.context.setError);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='register'>\r\n        <div className='register-content'>\r\n          <h1> Register to Hollywoof </h1>\r\n          <h3> You'll have access to...</h3>\r\n          <ul>\r\n            <li>\r\n              {' '}\r\n              - Reporting in if you find a movie or show with a barking dog\r\n            </li>\r\n            <li> - Adding timestamps</li>\r\n            <li> - Setting the volume of the particular occurrence</li>\r\n            <li> - Confirming others'reports</li>\r\n          </ul>\r\n        </div>\r\n        <div className='register-form'>\r\n          <form onSubmit={e => this.handleSubmit(e)}>\r\n            <input\r\n              onChange={this.handleChange}\r\n              type='text'\r\n              name='name'\r\n              placeholder='name'\r\n            ></input>\r\n\r\n            <input\r\n              onChange={this.handleChange}\r\n              type='text'\r\n              name='user_name'\r\n              placeholder='username'\r\n            ></input>\r\n            <input\r\n              onChange={this.handleChange}\r\n              name='password'\r\n              type='password'\r\n              placeholder='password'\r\n            ></input>\r\n            <button type='submit'> Submit </button>\r\n            <p> Already registered? <Link style={{textDecoration:'none'}} to='/login'><a> Login Here </a> </Link></p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Main\\Main.js",["87"],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\api-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\contexts\\DataContext.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\TSForm\\TSForm.js",["88"],"// Dependency Imports\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DataContext from '../../contexts/DataContext';\r\n// API Service Imports\r\nimport { postTimestamps } from '../../services/api-service';\r\nimport TokenService from '../../services/token-service';\r\n// CSS Imports\r\nimport './TSForm.css';\r\n\r\nexport default class TSForm extends Component {\r\n  static contextType = DataContext;\r\n  handleChange = event => {\r\n    const isCheckbox = event.target.type === 'checkbox';\r\n    this.setState({\r\n      [event.target.name]: isCheckbox\r\n        ? event.target.checked\r\n        : event.target.value,\r\n    });\r\n  };\r\n\r\n  combineTimestamps(hour, minute, second) {\r\n    const combined = `${hour}:${minute}:${second}`;\r\n    return combined.toString();\r\n  }\r\n\r\n  handleTSForm = e => {\r\n    e.preventDefault();\r\n    const { hour } = e.target;\r\n    const { minute } = e.target;\r\n    const { second } = e.target;\r\n\r\n    const { comment } = e.target;\r\n    const { volume } = e.target;\r\n\r\n    const confirmations = 0;\r\n    const media_id = this.props.match.params.imdbID;\r\n    const userid = TokenService.jwtDecode(TokenService.getAuthToken()).payload\r\n      .user_id;\r\n    const user_name = TokenService.jwtDecode(TokenService.getAuthToken()).payload.user_name;\r\n\r\n    const timestamp = this.combineTimestamps(\r\n      hour.value,\r\n      minute.value,\r\n      second.value\r\n    );\r\n    postTimestamps(\r\n      timestamp,\r\n      comment.value,\r\n      volume.value,\r\n      confirmations,\r\n      media_id,\r\n      userid,\r\n    )\r\n      .then(ts => {\r\n        this.context.addTimestamps(ts);\r\n      })\r\n      .then(() => {\r\n        hour.value = '';\r\n        minute.value = '';\r\n        second.value = '';\r\n        comment.value = '';\r\n        volume.value = '';\r\n      })\r\n\r\n      .then(() => {\r\n        this.props.history.push('/main');\r\n      })\r\n      .catch(this.context.setError);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='ts-form'>\r\n        <div className='ts-content'>\r\n          <h3> Report A TimeStamp </h3>\r\n        </div>\r\n        <form className='timestamp' onSubmit={e => this.handleTSForm(e)}>\r\n          <div className='ts-inputs'>\r\n          <input\r\n            placeholder='hour (hh)'\r\n            type='number'\r\n            name='hour'\r\n            min='1'\r\n            max='12'\r\n            onChange={this.handleChange}\r\n          ></input>\r\n          <input\r\n            placeholder='minute (mm)'\r\n            type='number'\r\n            name='minute'\r\n            min='1'\r\n            max='59'\r\n            onChange={this.handleChange}\r\n          ></input>\r\n          <input\r\n            placeholder='second (ss)'\r\n            type='number'\r\n            name='second'\r\n            min='1'\r\n            max='59'\r\n            onChange={this.handleChange}\r\n          ></input>\r\n</div>\r\n          <textarea placeholder='comment' name='comment'></textarea>\r\n          <select name='volume'>\r\n            <option> High </option>\r\n            <option> Medium </option>\r\n            <option> Low </option>\r\n          </select>\r\n          <button> Submit </button>\r\n          <Link to='/main'>\r\n            <button> Back </button>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\token-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\config.js",["89"],"export default {\r\n  OMDB_API_URL:\r\n    process.env.OMDB_API_URL || 'http://www.omdbapi.com/?apikey=bd085d9a&s=',\r\n  API_BASE_URL: process.env.REACT_APP_BASE_URL || 'http://localhost:8000/api',\r\n  TOKEN_KEY: 'hw-client-auth-token',\r\n};\r\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\auth-api-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\omdb-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\FontAwesomeIcons\\store.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":113,"column":7,"nodeType":"96","messageId":"97","endLine":113,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":119,"column":22,"nodeType":"100","endLine":119,"endColumn":38},{"ruleId":"101","severity":1,"message":"102","line":142,"column":30,"nodeType":"103","messageId":"97","endLine":142,"endColumn":32},{"ruleId":"101","severity":1,"message":"102","line":165,"column":61,"nodeType":"103","messageId":"97","endLine":165,"endColumn":63},{"ruleId":"101","severity":1,"message":"102","line":192,"column":31,"nodeType":"103","messageId":"97","endLine":192,"endColumn":33},{"ruleId":"101","severity":1,"message":"102","line":228,"column":30,"nodeType":"103","messageId":"97","endLine":228,"endColumn":32},{"ruleId":"104","severity":1,"message":"105","line":57,"column":93,"nodeType":"106","endLine":57,"endColumn":96},{"ruleId":"104","severity":1,"message":"105","line":73,"column":87,"nodeType":"106","endLine":73,"endColumn":90},{"ruleId":"107","severity":1,"message":"108","line":44,"column":14,"nodeType":"109","messageId":"110","endLine":44,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":40,"column":11,"nodeType":"113","messageId":"114","endLine":40,"endColumn":20},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","endLine":6,"endColumn":3},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-dupe-keys","Duplicate key 'totalResults'.","ObjectExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'user_name' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]