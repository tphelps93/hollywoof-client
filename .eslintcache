[{"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\index.js":"1","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\App.js":"2","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\reportWebVitals.js":"3","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Header\\Header.js":"4","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Details\\Details.js":"5","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Login\\Login.js":"6","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\LandingPage\\LandingPage.js":"7","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Registration\\Registration.js":"8","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Main\\Main.js":"9","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\api-service.js":"10","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\contexts\\DataContext.js":"11","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\TSForm\\TSForm.js":"12","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\token-service.js":"13","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\config.js":"14","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\auth-api-service.js":"15","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\omdb-service.js":"16","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\FontAwesomeIcons\\store.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":5065,"mtime":1610560762140,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1324,"mtime":1610475500903,"results":"22","hashOfConfig":"19"},{"size":9052,"mtime":1610560960146,"results":"23","hashOfConfig":"19"},{"size":2045,"mtime":1610560663435,"results":"24","hashOfConfig":"19"},{"size":1516,"mtime":1610560935913,"results":"25","hashOfConfig":"19"},{"size":4540,"mtime":1610631034649,"results":"26","hashOfConfig":"19"},{"size":5566,"mtime":1610560822704,"results":"27","hashOfConfig":"19"},{"size":4497,"mtime":1610478778479,"results":"28","hashOfConfig":"19"},{"size":618,"mtime":1610475500909,"results":"29","hashOfConfig":"19"},{"size":4546,"mtime":1610639281007,"results":"30","hashOfConfig":"19"},{"size":734,"mtime":1610475500912,"results":"31","hashOfConfig":"19"},{"size":202,"mtime":1610565300288,"results":"32","hashOfConfig":"19"},{"size":424,"mtime":1610475500911,"results":"33","hashOfConfig":"19"},{"size":558,"mtime":1610475500911,"results":"34","hashOfConfig":"19"},{"size":208,"mtime":1610484714592,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"vzh12l",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\index.js",[],["74","75"],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\App.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\reportWebVitals.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Details\\Details.js",["76","77","78","79"],"// Dependency Imports\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// Context Imports\r\nimport DataContext from '../../contexts/DataContext';\r\n// API Service Imports\r\nimport {\r\n  updateConfirmationCount,\r\n  updateLikeCount,\r\n  updateDislikeCount,\r\n  postBarks,\r\n  deleteTimestamp,\r\n} from '../../services/api-service';\r\nimport TokenService from '../../services/token-service';\r\n// CSS Imports\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Details.css';\r\n\r\nexport default class Details extends Component {\r\n  state = { error: null, expanded: [], username: '' };\r\n  static contextType = DataContext;\r\n\r\n  async toggleComment(ts_id) {\r\n    let expanded = [...this.state.expanded];\r\n    if (this.state.expanded.includes(ts_id)) {\r\n      expanded = expanded.filter(exp => {\r\n        return exp !== ts_id;\r\n      });\r\n    } else {\r\n      expanded.push(ts_id);\r\n    }\r\n    this.setState({\r\n      expanded,\r\n    });\r\n  }\r\n\r\n  tsExpanded = ts => {\r\n    return (\r\n      <tr key={ts.ts_id} name='comment' className='comm-container'>\r\n        <th>\r\n          <p>Username</p>\r\n          <h2>{ts.user_name}</h2>\r\n        </th>\r\n        <th>\r\n          <p>Comment</p>\r\n          <h3>{ts.comment}</h3>\r\n        </th>\r\n        <th>\r\n          {TokenService.getAuthToken() ? (\r\n            <button onClick={() => this.handleLikeClick(ts.ts_id, ts.likes)}>\r\n              <FontAwesomeIcon icon='thumbs-up' />\r\n              <span name='likes'>{ts.likes}</span>\r\n            </button>\r\n          ) : (\r\n            <span>\r\n              <FontAwesomeIcon icon='thumbs-up' />\r\n              <span name='likes'>{ts.likes}</span>\r\n            </span>\r\n          )}\r\n          {TokenService.getAuthToken() ? (\r\n            <button\r\n              onClick={() => this.handleDislikeClick(ts.ts_id, ts.dislikes)}\r\n            >\r\n              <FontAwesomeIcon icon='thumbs-down' />\r\n              <span name='dislikes'> {ts.dislikes} </span>\r\n            </button>\r\n          ) : (\r\n            <span>\r\n              <FontAwesomeIcon icon='thumbs-down' />{' '}\r\n              <span name='dislikes'> {ts.dislikes} </span>\r\n            </span>\r\n          )}\r\n        </th>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  renderElement = () => {\r\n    const barks = this.context.barks;\r\n    let element = <p> Dog Barks: Not Reported </p>;\r\n    for (let i = 0; i < barks.length; i++) {\r\n      if (barks[i].media_id === this.props.match.params.imdbID) {\r\n        element = (\r\n          <div className='bark-stat'>\r\n            <p>\r\n              Dog Barks: <span id='barks'>{barks[i].barks}</span>\r\n            </p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return element;\r\n  };\r\n\r\n  handleClickDeleteTS = ts_id => {\r\n    deleteTimestamp(ts_id).then(ts => {\r\n      this.context.deleteTS(ts_id);\r\n    });\r\n  };\r\n\r\n  handlePostBarkStatus = e => {\r\n    const user_id = TokenService.jwtDecode(TokenService.getAuthToken()).payload\r\n      .user_id;\r\n    e.preventDefault();\r\n    const { status } = e.target;\r\n    const mediaId = this.props.match.params.imdbID;\r\n    postBarks(status.value, mediaId, user_id).then(updatedStatus => {\r\n      this.context.addBark(updatedStatus);\r\n    });\r\n  };\r\n\r\n  handleLikeClick = (ts_id, likes) => {\r\n    const userid = TokenService.jwtDecode(TokenService.getAuthToken()).payload\r\n      .user_id;\r\n    updateLikeCount(ts_id, likes, userid);\r\n    this.context.iterateLikes(ts_id);\r\n  };\r\n\r\n  handleDislikeClick = (ts_id, dislikes) => {\r\n    const userid = TokenService.jwtDecode(TokenService.getAuthToken()).payload\r\n      .user_id;\r\n    updateDislikeCount(ts_id, dislikes, userid);\r\n    this.context.iterateDislikes(ts_id);\r\n  };\r\n\r\n  handleConfirmationClick = (ts_id, confirmations) => {\r\n    const userid = TokenService.jwtDecode(TokenService.getAuthToken()).payload\r\n      .user_id;\r\n    updateConfirmationCount(ts_id, confirmations, userid);\r\n    this.context.iterateConfirmations(ts_id);\r\n  };\r\n\r\n  render() {\r\n    const timestamps = this.context.timestamps;\r\n    const movies = this.context.movies[0];\r\n    const shows = this.context.shows[0];\r\n\r\n    let renderTimestamps;\r\n    if (timestamps) {\r\n      renderTimestamps = timestamps\r\n        .filter(ts => {\r\n          return ts.media_id == this.props.match.params.imdbID;\r\n        })\r\n        .map(ts => {\r\n          return (\r\n            <tbody key={ts.ts_id}>\r\n              <tr className='container'>\r\n                <th onClick={() => this.toggleComment(ts.ts_id)}>\r\n                  {' '}\r\n                  {ts.timestamp}{' '}\r\n                </th>\r\n                <th> {ts.volume} </th>\r\n                <th className='conf-hov'>\r\n                  {TokenService.getAuthToken() ? (\r\n                    <button\r\n                      onClick={() =>\r\n                        this.handleConfirmationClick(ts.ts_id, ts.confirmations)\r\n                      }\r\n                    >\r\n                      <FontAwesomeIcon icon='paw' />\r\n                      <span>{ts.confirmations}</span>\r\n                    </button>\r\n                  ) : (\r\n                    <span>{ts.confirmations}</span>\r\n                  )}\r\n\r\n                  {TokenService.getAuthToken() &&\r\n                  ts.userid ==\r\n                    TokenService.jwtDecode(TokenService.getAuthToken()).payload\r\n                      .user_id ? (\r\n                    <button\r\n                      onClick={() => this.handleClickDeleteTS(ts.ts_id)}\r\n                      className='delete-ts'\r\n                    >\r\n                      {' '}\r\n                      Delete{' '}\r\n                    </button>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </th>\r\n              </tr>\r\n              {this.state.expanded.includes(ts.ts_id)\r\n                ? this.tsExpanded(ts)\r\n                : ''}\r\n            </tbody>\r\n          );\r\n        });\r\n    }\r\n\r\n    let renderDetails;\r\n    if (movies) {\r\n      renderDetails = movies\r\n        .filter(movie => {\r\n          return movie.imdbID == this.props.match.params.imdbID;\r\n        })\r\n        .map(movie => {\r\n          return (\r\n            <div key={movie.imdbID} className='movie-info'>\r\n              {/* If movie poster is null return a placeholder image */}\r\n              {movie.Poster === 'N/A' ? (\r\n                <img\r\n                  src='https://www.gaithersburgdental.com/wp-content/uploads/2016/10/orionthemes-placeholder-image.png'\r\n                  alt='movie poster'\r\n                ></img>\r\n              ) : (\r\n                <img src={`${movie.Poster}`} alt='movie poster'></img>\r\n              )}\r\n              <h3> {movie.Title} </h3>\r\n              <p> Release Date: {movie.Year} </p>\r\n              {this.renderElement()}\r\n              {TokenService.getAuthToken() ? (\r\n                <form onSubmit={e => this.handlePostBarkStatus(e)}>\r\n                  <select className='status' name='status'>\r\n                    <option> Yes </option>\r\n                    <option> No </option>\r\n                  </select>{' '}\r\n                  <button type='submit'>Update</button>\r\n                </form>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          );\r\n        });\r\n    }\r\n\r\n    if (shows) {\r\n      renderDetails = shows\r\n        .filter(show => {\r\n          return show.imdbID == this.props.match.params.imdbID;\r\n        })\r\n        .map(show => {\r\n          return (\r\n            <div key={show.imdbID} className='movie-info'>\r\n              <img\r\n                src={`${\r\n                  !show.Poster\r\n                    ? 'https://www.gaithersburgdental.com/wp-content/uploads/2016/10/orionthemes-placeholder-image.png'\r\n                    : show.Poster\r\n                }`}\r\n                alt='movie poster'\r\n              ></img>\r\n              <h3> {show.Title} </h3>\r\n              <p> Release Date: {show.Year} </p>\r\n              {this.renderElement()}\r\n              {TokenService.getAuthToken() ? (\r\n                <form onSubmit={e => this.handlePostBarkStatus(e)}>\r\n                  <select className='status' name='status'>\r\n                    <option> Yes </option>\r\n                    <option> No </option>\r\n                  </select>{' '}\r\n                  <button type='submit'>Update</button>\r\n                </form>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          );\r\n        });\r\n    }\r\n    return (\r\n      <div className='details-page'>\r\n        <div className='details'>{renderDetails}</div>\r\n\r\n        <table width='90%' id='table' className='detail-table'>\r\n          <caption>Time Stamps</caption>\r\n          <thead>\r\n            <tr>\r\n              <th> Timestamp </th>\r\n              <th> Volume </th>\r\n              <th> Confirmed </th>\r\n            </tr>\r\n          </thead>\r\n          {renderTimestamps}\r\n        </table>\r\n        <div className='back-btn'>\r\n          <Link to='/main'>\r\n            <button> Back </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Login\\Login.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\LandingPage\\LandingPage.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Registration\\Registration.js",["80","81"],"// Dependency Imports\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// API Imports\r\nimport { postUser } from '../../services/api-service';\r\n// CSS Imports\r\nimport './Registration.css';\r\n\r\nconst initial = {\r\n  name: '',\r\n  user_name: '',\r\n  password: '',\r\n  nameError: '',\r\n  usernameError: '',\r\n  passwordError: '',\r\n};\r\n\r\nexport default class Registration extends Component {\r\n  state = { initial };\r\n  handleChange = event => {\r\n    const isCheckbox = event.target.type === 'checkbox';\r\n    this.setState({\r\n      [event.target.name]: isCheckbox\r\n        ? event.target.checked\r\n        : event.target.value,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    const REGEX_UPPER_LOWER_NUMBER_SPECIAL = /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&])[\\S]/;\r\n\r\n    let nameError = '';\r\n    let usernameError = '';\r\n    let passwordError = '';\r\n\r\n    // Name Validation\r\n    if (!this.state.name) {\r\n      nameError = 'Name is required.';\r\n    }\r\n\r\n    // Username Error\r\n    if (!this.state.user_name) {\r\n      usernameError = 'Username is required.';\r\n    }\r\n\r\n    // Password Validation\r\n    if (!this.state.password) {\r\n      passwordError = 'Password is required.';\r\n    }\r\n\r\n    if (this.state.password.length <= 8) {\r\n      passwordError = 'Password must be longer than 8 characters.';\r\n    }\r\n\r\n    if (this.state.password.length > 20) {\r\n      passwordError = 'Password must not be longer than 20 characters.';\r\n    }\r\n\r\n    if (\r\n      this.state.password.startsWith(' ') ||\r\n      this.state.password.endsWith(' ')\r\n    ) {\r\n      passwordError = 'Password must not start or end with empty spaces,';\r\n    }\r\n\r\n    if (!REGEX_UPPER_LOWER_NUMBER_SPECIAL.test(this.state.password)) {\r\n      passwordError =\r\n        'Password must contain 1 upper case, lower case, number and special character.';\r\n    }\r\n\r\n    if (nameError || usernameError || passwordError) {\r\n      this.setState({ nameError, usernameError, passwordError });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({ error: null });\r\n    const { name } = e.target;\r\n    const { user_name } = e.target;\r\n    const { password } = e.target;\r\n    const isValid = this.validate();\r\n    if (isValid) {\r\n      postUser(name.value, user_name.value, password.value)\r\n        .then(() => {\r\n          name.value = '';\r\n          user_name.value = '';\r\n          password.value = '';\r\n        })\r\n        .then(() => {\r\n          this.props.history.push('/main');\r\n        })\r\n        // clear form\r\n        .catch(res => {\r\n          this.setState({ initial });\r\n        });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='register'>\r\n        <div className='register-content'>\r\n          <h1> Register to Hollywoof </h1>\r\n          <h3> You'll have access to...</h3>\r\n          <ul>\r\n            <li>\r\n              {' '}\r\n              - Reporting in if you find a movie or show with a barking dog\r\n            </li>\r\n            <li> - Adding timestamps</li>\r\n            <li> - Setting the volume of the particular occurrence</li>\r\n            <li> - Confirming others'reports</li>\r\n          </ul>\r\n        </div>\r\n        <div className='register-form'>\r\n          <form onSubmit={e => this.handleSubmit(e)}>\r\n            <input\r\n              onChange={this.handleChange}\r\n              type='text'\r\n              name='name'\r\n              placeholder='name'\r\n            ></input>\r\n            <div style={{ color: 'red', fontSize: 15 }}>\r\n              {this.state.nameError}\r\n            </div>\r\n\r\n            <input\r\n              onChange={this.handleChange}\r\n              type='text'\r\n              name='user_name'\r\n              placeholder='username'\r\n            ></input>\r\n            <div style={{ color: 'red', fontSize: 15 }}>\r\n              {this.state.usernameError}\r\n            </div>\r\n            <input\r\n              onChange={this.handleChange}\r\n              name='password'\r\n              type='password'\r\n              placeholder='password'\r\n            ></input>\r\n            <div style={{ color: 'red', fontSize: 15 }}>\r\n              {this.state.passwordError}\r\n            </div>\r\n            <button type='submit'> Submit </button>\r\n            <p>\r\n              {' '}\r\n              Already registered?{' '}\r\n              <Link style={{ textDecoration: 'none' }} to='/login'>\r\n                Login Here\r\n              </Link>\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\Main\\Main.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\api-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\contexts\\DataContext.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\TSForm\\TSForm.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\token-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\config.js",["82"],"export default {\r\n  OMDB_API_URL:\r\n    process.env.REACT_APP_OMDB_API_URL,\r\n  API_BASE_URL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000/api',\r\n  TOKEN_KEY: 'hw-client-auth-token',\r\n};\r\n","C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\auth-api-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\services\\omdb-service.js",[],"C:\\Users\\Taylor\\Desktop\\Github\\Capstones\\hollywoof\\hollywoof-client\\src\\Components\\FontAwesomeIcons\\store.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":142,"column":30,"nodeType":"89","messageId":"90","endLine":142,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":168,"column":29,"nodeType":"89","messageId":"90","endLine":168,"endColumn":31},{"ruleId":"87","severity":1,"message":"88","line":195,"column":31,"nodeType":"89","messageId":"90","endLine":195,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":231,"column":30,"nodeType":"89","messageId":"90","endLine":231,"endColumn":32},{"ruleId":"91","severity":1,"message":"92","line":30,"column":89,"nodeType":"93","messageId":"94","endLine":30,"endColumn":90,"suggestions":"95"},{"ruleId":"91","severity":1,"message":"96","line":30,"column":92,"nodeType":"93","messageId":"94","endLine":30,"endColumn":93,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","endLine":6,"endColumn":3},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["103","104"],"Unnecessary escape character: \\^.",["105","106"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"messageId":"107","fix":"108","desc":"109"},{"messageId":"110","fix":"111","desc":"112"},{"messageId":"107","fix":"113","desc":"109"},{"messageId":"110","fix":"114","desc":"112"},"removeEscape",{"range":"115","text":"116"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"117","text":"118"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"119","text":"116"},{"range":"120","text":"118"},[779,780],"",[779,779],"\\",[782,783],[782,782]]